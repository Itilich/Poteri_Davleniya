// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poteri_Davleniya.Data;

#nullable disable

namespace Poteri_Davleniya.Migrations
{
    [DbContext(typeof(PoteriContext))]
    [Migration("20250523114630_newddata")]
    partial class newddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Poteri_Davleniya.Data.Variant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cd")
                        .HasColumnType("REAL");

                    b.Property<double>("Cs")
                        .HasColumnType("REAL");

                    b.Property<double>("air_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("delta_h")
                        .HasColumnType("REAL");

                    b.Property<double>("heating_air_outgo")
                        .HasColumnType("REAL");

                    b.Property<double>("heating_air_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("pipe_diameter")
                        .HasColumnType("REAL");

                    b.Property<double>("pipe_lenght")
                        .HasColumnType("REAL");

                    b.Property<int>("pipe_quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("pipe_thickness")
                        .HasColumnType("REAL");

                    b.Property<double>("poteri1")
                        .HasColumnType("REAL");

                    b.Property<int>("rows_across")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rows_along")
                        .HasColumnType("INTEGER");

                    b.Property<double>("smoke_outgo")
                        .HasColumnType("REAL");

                    b.Property<double>("smoke_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("smoke_temp_2")
                        .HasColumnType("REAL");

                    b.Property<double>("space_air_pass")
                        .HasColumnType("REAL");

                    b.Property<double>("step_across")
                        .HasColumnType("REAL");

                    b.Property<double>("step_along")
                        .HasColumnType("REAL");

                    b.Property<double>("z2")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
